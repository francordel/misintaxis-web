---
import Button from "./Button.astro";
---

<style>
  .signup__form {
    margin: 1rem 0;
    width: 100%;
    display: flex;
    max-width: 600px;
    flex-direction: row;
  }

  input[type="text"] {
    width: 100%;
    padding: 0.5rem 1rem;
    border: 2px solid #ccc;
    color: #000000;
    border-radius: 2rem;
    outline-style: none;
  }

  input:focus {
    border: 2px solid #000;
  }

  .signup__form :global(.btn) {
    margin-left: 1rem;
  }

  @media (max-width: 600px) {
    .signup__form {
      flex-direction: column;
      align-items: center;
    }

    input[type="text"] {
      margin-bottom: 1rem;
    }

    .signup__form :global(.btn) {
      margin-left: 0;
      width: 40%;
      text-align: center;
    }
  }

  /* Estilos del Canvas */
  .canvas {
    border: 3px solid #000; /* Borde más grueso */
    padding: 2rem; /* Más espacio interno */
    margin-top: 1.5rem; /* Más separación del input */
    width: 600px; /* Tamaño para escritorio */
    height: 300px; /* Tamaño para escritorio */
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: white !important; /* Asegura fondo blanco */
    font-size: 1.5rem; /* Letra más grande */
    font-weight: bold; /* Texto más destacado */
    color: black !important; /* Asegura texto negro */
    text-align: center; /* Centrar el texto */
    border-radius: 10px; /* Bordes redondeados */
    box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.2); /* Sombra para resaltar */
  }

  /* Estilos para móviles */
  @media (max-width: 600px) {
    .canvas {
      width: 300px; /* Se ajusta al ancho del dispositivo */
      height: 200px; /* Más pequeño en móviles */
      font-size: 1.2rem; /* Letra un poco más pequeña */
      padding: 1rem; /* Menos espacio interno */
    }
  }
</style>

<!-- Formulario -->
<form class="signup__form fade-in" id="analyzeForm">
  <input type="text" id="phraseInput" placeholder="Frase a analizar" required />
  <Button type="submit">¡Analiza! 🚀</Button>
</form>

<!-- Contenedor donde se inyectará el Canvas dinámicamente -->
<div id="canvasContainer"></div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("analyzeForm");
    const phraseInput = document.getElementById("phraseInput");
    const canvasContainer = document.getElementById("canvasContainer");

    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const phrase = phraseInput.value.trim();

      if (!phrase) {
        alert("Por favor, introduce una frase.");
        return;
      }

      // Eliminar cualquier canvas previo antes de crear uno nuevo
      canvasContainer.innerHTML = "";

      // Crear el nuevo canvas dinámico
      const canvasDiv = document.createElement("div");
      canvasDiv.classList.add("canvas");
      canvasDiv.textContent = phrase;

      // Asegurar tamaño correcto según el dispositivo
      if (window.innerWidth <= 600) {
        canvasDiv.style.width = "300px";
        canvasDiv.style.height = "200px";
        canvasDiv.style.fontSize = "1.2rem";
        canvasDiv.style.padding = "1rem";
      } else {
        canvasDiv.style.width = "600px";
        canvasDiv.style.height = "300px";
        canvasDiv.style.fontSize = "1.5rem";
        canvasDiv.style.padding = "2rem";
      }

      canvasDiv.style.backgroundColor = "white";
      canvasDiv.style.color = "black";

      // Agregar el canvas al contenedor
      canvasContainer.appendChild(canvasDiv);

      try {
        const response = await fetch("/api/analyze", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ text: phrase }),
        });

        const result = await response.json();
        console.log(result);
        alert("Análisis generado con éxito!");
      } catch (error) {
        console.error("Error en el análisis:", error);
        alert("Hubo un error al analizar la frase.");
      }
    });
  });
</script>
